gem uninstall copycasts
gem build copycasts.gemspec 
gem install copycasts

require 'copycasts'
a = CopyCasts.new({page: 1})
a.download_videos

types = {}
file_links = []

types[:zip] = 2 if options[:zip]
types[:mp4] = 3 if options[:mp4]
types[:m4v] = 4 if options[:m4v]
types[:webm] = 5 if options[:webm]
types[:ogv] = 6 if options[:ogv]

types = { zip: 2, mp4: 3, m4v: 4, webm: 5, ogv: 6 } if options[:all]

types.each_pair do |key, value|
  puts "Crawling "
  get_links.each do |link|
    file_link = Nokogiri::HTML(open(TARGET_URL + "/" + link))
    url = url.css('.downloads li[#{value}] a').first
    file_links << url.values.first
  end
end

file_links



Gem::Specification.new do |s|
  s.name        = "copycasts"
  s.version     = "0.0.2"
  s.authors     = ["Nicholas Ng"]
  s.email       = ["secret@live.com.my"]
  s.homepage    = ""
  s.summary     = %q{Offline watch free episode of railscast videos for personal usage.}
  s.description = %q{Download videos from video source}
  
  s.add_development_dependency "nokogiri", "~> 1.5", ">= 1.5.6"
  s.add_development_dependency "open-uri", "~> 1.5", ">= 1.5.6"
  s.add_development_dependency "rake", "~> 10.1", ">= 10.1.0"

  s.files = [
    "lib/copycasts.rb"
  ]
  s.require_paths = ["lib"]
end





require 'nokogiri'
require 'open-uri'
require 'net/http'

class CopyCasts
  TARGET_URL = 'http://railscasts.com'
  attr_accessor :page

  def initialize(options = {})
    @pages = options[:page] || maximum_page

  end

  def get_links
    casts_list = []
    puts "Crawling casts list..."
    for index in 1..@pages
      target_page = Nokogiri::HTML(open(TARGET_URL + "/?type=free&page=#{index}"))
      target_page.css('.watch a:first').each do |link|
        link_without_autoplay = link['href'].to_s.sub('?autoplay=true','')
        casts_list << link_without_autoplay
      end
    end
    puts "Finish crawling."
    casts_list
  end

  def maximum_page
    target_page = Nokogiri::HTML(open(TARGET_URL + "/?type=free"))
    ret = 0
    target_page.css('.pagination a').each do |a|
      if !(a.content.match(/\A[+-]?\d+?(\.\d+)?\Z/) == nil) #not number
        if a.content.to_i > 0
          ret = a.content.to_i
        end
      end
    end
    ret
  end

  def file_links
    mp4_links = []
    get_links.each do |video_link|
      video_page = Nokogiri::HTML(open(TARGET_URL + "/" + video_link))
      link = video_page.css('.downloads li[3] a').first
      mp4_links << link.values.first
    end
    mp4_links
  end

  def download_videos
    mp4_video_links.each do |video_link|
      uri = URI.parse(video_link)
      file_name = video_link.split("/").last

      Net::HTTP.start(uri.host) do |http|
        puts "Start downloading #{file_name}..."
        response = http.get(uri.request_uri)
        open(file_name, "wb") do |file|
          file.write(response.body)
        end
      end
      puts "Downloaded successfully!"
    end
  end

end
